import pandas as pd
import pickle
from pyTVDN import TVDNDetect
from pathlib import Path
import rpy2.robjects as robj
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import sys
import seaborn as sns


#load data for subject 1
#data=pd.read_csv("E:\petra\TVDNsub1-main\ef.csv")
#np.save("efdata.npy",data)

for n in range(1,6):
    fMRI = np.load("E:\petra\TVDNsub1-main\subjects_all.npy")
    fMRI = fMRI[:, 1:]
    condition = fMRI[:, 0] == n
    sub_1 = fMRI[condition]
    fMRI = sub_1
    # Construct the TVDN Detection Class
    kappa = 1.394
    lamb = 1e-6
    r = 16
    Lmin = 10
    fct = 2
    nsim = 50
    fMRIdet = TVDNDetect(Ymat=fMRI, saveDir="E:\petra\TVDNsub1-main\saved"+str(n), dataType="fMRI", fName="fMRIsample_",
                         r=16, kappa=1.394, fct=2, lamb=1e-6, downRate=4, MaxM=10, Lmin=10, freq=0.5)
    fMRIdet()
    # Tuning the kappa parameters: (0.5,10)->1.6515; (1.5,1.7)->1.591,
    kappas = np.linspace(1, 2, 100)
    # kappas = [1.45, 1.55, 1.65, 1.75, 1.85, 1.95]
    fMRIdet.TuningKappa(kappas)
    print("The optimal kappas are:", fMRIdet.optKappa)
    print("The optimal number of change point under the range of kappa we speicified is:", fMRIdet.optKappaOptNumChg)
    print("The optimal number of change point is:", fMRIdet.optNumChg)

    fMRIdet.UpdateEcpts(numChg=2)
    #fMRIdet.UpdateEcpts(2)
    print(fMRIdet)
    dir(fMRIdet)
    print(fMRIdet.ecpts)

    # Extract the Eigvals and EigVectors
    fMRIdet.GetFeatures()
    Ur = fMRIdet.curEigVecs
    lamMs = fMRIdet.curEigVals

    # Change the number of change point
    fMRIdet.UpdateEcpts(2)  # Reconstruct the Xmat and estiamte the eigen values, again
    fMRIdet.GetFeatures()
    lamMs = fMRIdet.curEigVals

    n = n+1
    print(n)
