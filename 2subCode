import pandas as pd
from numpy import ndarray

from pyTVDN import TVDNDetect
from pathlib import Path
import rpy2.robjects as robj
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import sys
import seaborn as sns
n = 1
if n <= 5:
    ef = np.load("E:\petra\TVDNsub1-main/allsubject.npy")
    condition=ef[:,0] == n

    each_sub= ef[condition]
    print(each_sub)
    fMRI = each_sub
    kappa = 1.3956
    lamb = 1e-6
    r = 6
    Lmin = 10
    fct = 2
    nsim = 50
    fMRIdet = TVDNDetect(Ymat=fMRI, saveDir="E:\petra\TVDNsub1-main\saved", dataType="fMRI", fName="fMRIsample_", r=16, kappa=1.3956, fct=2,
                         lamb=1e-6, downRate=4, MaxM=10, Lmin=10, freq=0.5)
    # Run the Main Function
    fMRIdet()
    # Tuning the kappa parameters: (0.5,10)->1.6515; (1.5,1.7)->1.591,
    kappas = np.linspace(0.1, 1.7, 100)
    # kappas = [1.45, 1.55, 1.65, 1.75, 1.85, 1.95]
    fMRIdet.TuningKappa(kappas)
    print("The optimal kappas are:", fMRIdet.optKappa)
    print("The optimal number of change point under the range of kappa we speicified is:", fMRIdet.optKappaOptNumChg)
    print("The optimal number of change point is:", fMRIdet.optNumChg)
    # fMRIdet.UpdateEcpts(numChg=2)
    fMRIdet.UpdateEcpts()
    # Extract the Eigvals and EigVectors
    fMRIdet.GetFeatures()
    Ur = fMRIdet.curEigVecs
    lamMs = fMRIdet.curEigVals
    # fMRIdet.curEigVals,
    EigValue = np.array(fMRIdet.curEigVals)
    #np.save("fMRIdet.curEigVals", EigValue)

    print(fMRIdet)

    # fMRIdet.curEigVectors
    EigVec = np.array(fMRIdet.curEigVecs)
    #np.save("fMRIdet.curEigVectors", EigVec)

    # Change the number of change point
    fMRIdet.UpdateEcpts(8)  # Reconstruct the Xmat and estiamte the eigen values, again
    fMRIdet.GetFeatures()
    lamMs = fMRIdet.curEigVals

    # save cpts value
    #ecptsValue: ndarray = np.array(fMRIdet.ecpts)
    #np.save("fMRIdet.cpts", ecptsValue)
    ecptsValue = np.array(fMRIdet.ecpts)
    # save r value
    #rValue = np.array(fMRIdet.paras)
    #np.save("fMRIdet.paras['r']", rValue)
    if n == 1:
        a_initial = ecptsValue
    if n > 1:
        a_1=np.load("E:\petra\TVDNsub1-main/fMRIdet.cpts.npy")
        a_final = np.vstack(a_1, ecptsValue)
        a_initial = a_final
        print(a_final)
    n = n+1
    print(n)

